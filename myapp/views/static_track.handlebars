<div class='panel panel-default' style="width:95%;height:95%;margin:10px;">
    <svg id='original' class='panel panel-default' style="width:47%;height:47%;"></svg>
    <svg id='random' class='panel panel-default' style="width:47%;height:47%;"></svg>
    <svg id='ourSample' class='panel panel-default' style="width:47%;height:47%;"></svg>
    <svg id='filter' class='panel panel-default' style="width:47%;height:47%;"></svg>
</div>
<script>

    function draw(fileName) {
        d3.json(fileName, function (data) {
            d3.json("./data/BS/track/original.json", function (oData) {
                let svgName = fileName.split('/')[fileName.split('/').length - 1].split('.')[0];
                var oSvg = d3.select("#" + svgName);
                oSvg.append("text")
                    .attr("x", 200)
                    .attr("y", 50)
                    .text(svgName);
                var width = 683;
                var height = 330;
                var drawData = {}
                var drawData2={}
                for(var key in data){
                    if(drawData[data[key]]===undefined){
                        drawData[data[key]]=1
                    }else{
                        drawData[data[key]]+=1
                    }
                }
                for(var key in oData){
                    if(drawData2[oData[key]]===undefined){
                        drawData2[oData[key]]=1
                    }else{
                        drawData2[oData[key]]+=1
                        
                    }
                }


                var diffData={}
                
                for (var k in drawData) {
                    for (var ok in drawData2) {
                        if (k  == ok) {
                            var value = drawData2[ok]-drawData[k] 
                            diffData[k] = value;
                        }
                    }
                }
                console.log('diffData: ', diffData);
                var maxValue=0;
                var minValue=1000;
                for(var k in diffData){
                    if(diffData[k]>30000){
                        continue;
                    }
                    if(diffData[k]>maxValue){
                        maxValue=diffData[k];
                    }
                    if(diffData[k]<minValue){
                        minValue=diffData[k];
                    }
                }
                console.log('maxValue: ', maxValue);
                var heightScale = d3.scaleLinear()
                    .domain([minValue, maxValue])
                    .range([0, 330])
                var rectWidth = width / Object.keys(drawData).length;
                var count = 0;
                for (var key in diffData) {
                    if(count ===0){
                    count += 1;
                        continue;
                    }
                    let value = diffData[key];
                    oSvg.append("rect")
                        .attr("x", rectWidth * count)
                        .attr("y", 330 - heightScale(diffData[key]))
                        .attr("height", heightScale(diffData[key]))
                        .attr("width", rectWidth)
                        .style("fill", "blue")
                        .on("mouseover", () => console.log(value))
                    count += 1;
                }
            })
        })
    }
    draw("./data/BS/track/original.json");
    draw("./data/BS/track/ourSample.json");
    draw("./data/BS/track/random.json");


</script>